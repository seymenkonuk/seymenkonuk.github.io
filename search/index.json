[{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Sunduğu özellikler:\nKullanıcı kayıt/giriş sistemi E-Posta Adresi Doğrulama Parola Sıfırlama Müzik Dinleme Beğenilen Müzikler Dinleme Geçmişi En Çok Dinlediklerin En Son Eklenenler Oynatma Listesi Sanatçıya Göre Gruplama Liste Karıştırma Döngüye Alma (Döngü kapalı, liste döngüsü, şarkı döngüsü) Kayıt Giriş Sistemi Uygulama Tanıtımı Proje Görselleri Başlangıç Bağımlılıklar Proje aşağıdaki işletim sistemlerinde test edilmiştir:\nFedora Projenin düzgün çalışabilmesi için aşağıdaki yazılımların sisteminizde kurulu olması gerekir:\nPython Yorumlayıcısı 3.10 pip Makefile Docker Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/music_player.git Projeye gidin: 1 cd music_player Yapılandırma Müziklerinizin olduğu root dizini, dinlemek istediğiniz müzik dosya uzantılarını, backend url\u0026rsquo;sini ve uygulama temasını frontends/desktop-app/env/.env dosyasına yazınız:\n1 2 3 4 5 6 MUSIC_ROOT_PATH=\u0026#34;C:/Musics\u0026#34; MUSIC_FILE_EXTENSIONS=\u0026#34;.mp3;.wav;.ogg\u0026#34; API_BASE_URL=\u0026#34;http://localhost:8000\u0026#34; THEME=\u0026#34;light\u0026#34; Backend\u0026rsquo;in doğrulama ve şifre sıfırlama gibi işlemler için mail gönderebilmesi için backends/client-api/env/.env dosyasında aşağıdaki değişiklikleri yapınız:\n1 2 3 4 5 EMAIL=\u0026#34;example@example.com\u0026#34; PASSWORD=\u0026#34;example-password\u0026#34; DISPLAY_NAME=\u0026#34;Name Surname\u0026#34; SMTP_HOST=\u0026#34;smtp.example.com\u0026#34; SMTP_PORT=\u0026#34;465\u0026#34; Çalıştırma Uygulama Makefile üzerinden kolayca çalıştırılabilir.\nProje için gerekli modülleri yüklemek ve backend\u0026rsquo;i build etmek için: 1 make build Backend\u0026rsquo;i ve Müzik çalar uygulamasını çalıştırmak için: 1 make run Backend olmadan Müzik çalar uygulamasını çalıştırmak için (giriş/kayıt çalışmaz): 1 make start Atıflar Bu projede kullanılan ikonlar Freepik tarafından tasarlanmıştır.\nIcons used in this project are designed by Freepik.\n","date":"2025-07-22T00:00:00Z","image":"https://seymenkonuk.github.io/post/music-player/cover_hu_42a8da6871116a57.png","permalink":"https://seymenkonuk.github.io/post/music-player/","title":"Müzik Çalar Uygulaması"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Bu proje, ESP32 tabanlı bir oyun konsolu ve eğitsel bir oyun yazılımını bir araya getirir. Hedefimiz, öğrencilerin algoritmik düşünme becerisini oyun yoluyla eğlenceli ve etkili biçimde geliştirmektir.\nProjede ayrıca, mobil uygulama ile öğretmen ve velilerin öğrenci ilerlemesini takip etmesi planlanmaktadır.\nSunduğu özellikler:\nESP32 tabanlı taşınabilir oyun konsolu Eğitsel oyun içeriği ile algoritmik düşünme becerisi geliştirme TFT LCD ekran desteği Hoparlör ile kare dalga ses çıkışı Batarya ve TP4056 şarj modülü ile taşınabilirlik Wi-Fi üzerinden HTTP sunucu aracılığıyla cihazı yapılandırma Wi-Fi üzerinden yazılım güncellemesi (OTA) OTA güncellemeleri için PHP tabanlı backend sunucu Backend ve cihaz arasında mTLS (mutual TLS) ile kimlik doğrulama Mobil uygulama ile öğretmen ve velilere ilerleme takibi (geliştirme aşamasında) MQTT protokolü kullanılarak mobil uygulama ile oyun konsolu arasında anlık iletişim (geliştirme aşamasında) Proje Görselleri Oyun Hakkında Bu oyun, “Ateş” karakterini yönlendirerek tüm paraları toplamayı ve suya temas etmeden en kısa yoldan çıkış kapısına ulaşmayı hedefler.\nOyun alanında iki zemin türü bulunur:\nOrman: Serbestçe yürüyebileceğin güvenli alanlar. Buz: Üzerinden geçtikçe eriyen ve bir daha adım atılamayan zeminler. Bileşenler Bileşen Miktar ESP32 1 2.8\u0026quot; SPI TFT Ekran (ILI9341) 1 Hoparlör 1 3.7V 1S 40C Lipo Batarya 1 TP4056 Şarj Modülü 1 Regülatör 1 Buton 6 90 Derece Sürgülü Switch 2 8x12cm Çift Yüzlü Pertinaks 2 1x40 Dişi Pin Header 4 1x40 Erkek Pin Header 4 Direnç 6 Kablo 10+ Maliyet Bileşen Tahmini Fiyat (TL) ESP32 250 2.8\u0026quot; SPI TFT Ekran (ILI9341) 500 Hoparlör 60 3.7V 1S 40C Lipo Batarya 400 TP4056 Şarj Modülü 15 Regülatör 75 Buton 40 90 Derece Sürgülü Switch 10 8x12cm Çift Yüzlü Pertinaks 100 1x40 Dişi Pin Header 35 1x40 Erkek Pin Header 30 Direnç 2 Kablo 68 Toplam yaklaşık maliyet: 1585 TL\nDevre Şeması Wi-Fi Yapılandırması Cihaz kendi Wi-Fi ağını oluşturur (ROWS-\u0026lt;Seri-Numarası\u0026gt;).\nBilgisayar veya mobil cihazınız ile bu ağa bağlanın. Ağın parolası frontends/device-firmware/data/wifi/ap/PASS dosyasında yazmaktadır. Tarayıcıdan http://192.168.4.1 adresine gidin. Sizden istenen CN ve PASS bilgilerini giriniz. Açılan yapılandırma sayfasından Wi-Fi SSID ve parola bilgilerini giriniz. Kurulum Yapılandırma PlatformIO eklentili Visual Studio Code’u indirip kurun. Projeyi klonlayın: 1 2 git clone https://github.com/seymenkonuk/ROWS.git cd ROWS frontends/device-firmware/include/rows_api.h dosyasındaki \u0026lt;your-domain\u0026gt; kısmını değiştiriniz. utils/ecc-certificate-generator/cnf/server.cnf dosyasındaki \u0026lt;your-domain\u0026gt; kısımlarını değiştiriniz. backend\u0026rsquo;i çalıştırın (isteğe bağlı) Yükleme frontends/device-firmware dizinini Visual Studio Code ile açın. Gerekli kütüphaneler otomatik yüklenecektir. Her cihaz için benzersiz sertifika üretin: 1 2 cd utils/ecc-certificate-generator ./generate.sh reset ESP32 cihazınızı bağlayıp PlatformIO üzerinden Upload yapın. ESP32 cihazınızı bağlayıp PlatformIO üzerinden Upload Filesystem Image yapın. Gelecek Planlar Oyuna öğretici mod eklenmesi Mobil uygulamanın geliştirilmesi Yeni oyunların eklenmesi 3B yazıcı ile kasa tasarımı ve üretilmesi ","date":"2025-07-12T00:00:00Z","image":"https://seymenkonuk.github.io/post/rows/cover_hu_bee49b700b9860c0.jpg","permalink":"https://seymenkonuk.github.io/post/rows/","title":"ROWS: Mini Oyun Konsolu"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Kullanıcılar, farklı hesaplar için güçlü ve benzersiz parolalar oluşturabilir, saklayabilir ve hızlıca erişebilir. Eklenti, parolaları şifreli bir şekilde saklar ve sadece doğru anahtar ile erişim sağlar. Kullanıcı dostu bir arayüz sunarak, parolalarınızı kolayca ekleyip düzenlemenize olanak tanır.\nSunduğu özellikler:\nGüçlü parola oluşturucu Parolaların şifreli saklanması Otomatik form doldurma Parolalarınızı aktif sekmenin base-domain\u0026rsquo;ine göre gruplama Parolalarınızı dosya olarak dışarı aktarma ve dosyayı içeri aktarma Tanıtım Başlangıç Bağımlılıklar Proje aşağıdaki tarayıcılarda test edilmiştir:\nGoogle Chrome Microsoft Edge Brave Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/SYPass.git Projeye gidin: 1 cd SYPass Gerekli yapılandırmaları yaptıktan sonra eklentiyi tarayıcınıza kurunuz. Chrome için kurulum aşamaları: chrome://extensions/ adresine gidiniz. Geliştirici Modu aktif ediniz. build/ klasörünü tarayıcıya sürükleyiniz. Yapılandırma Ayarlarınız, tarayıcının depolamasında şifreli bir şekilde saklanır. Eklenti ayarlarından bu dosyayı dışarı aktarabilir veya içeri aktarabilirsiniz. Şifreleme anahtarı build/src/config.min.js dosyasındaki key bilgisidir. Güvenliğiniz için bu değeri değiştirmelisiniz. 1 export const key=\u0026#34;yeni-key-bilgisi\u0026#34;; Eklentinin ismini değiştirmek isterseniz: build/manifest.json dosyasında name\u0026lsquo;i değiştiriniz. build/src/config.min.js dosyasında app_name\u0026rsquo;i değiştiriniz. 1 export const app_name=\u0026#34;yeni-app-ismi\u0026#34;; ","date":"2025-03-11T00:00:00Z","permalink":"https://seymenkonuk.github.io/post/sypass/","title":"SYPass: Parola Yöneticisi"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Bu Chrome eklentisi, WhatsApp Web\u0026rsquo;teki mesajlar için ek bir güvenlik katmanı sağlar. WhatsApp Web\u0026rsquo;in yerleşik şifreleme özelliklerine ek olarak, mesajlarınızı AES (Advanced Encryption Standard) algoritması ile ekstra bir şifrelemeye tabi tutarak gizliliğinizi daha da artırır.\nSunduğu özellikler:\nMesajları şifreleme / çözme Dosyaları şifreleme / çözme Sohbetin ortak anahtarını manuel belirleme Ortak anahtar belirlemek için Diffie-Hellman kullanma Anahtarları dosya olarak dışarı aktarma ve dosyayı içeri aktarma Tanıtım Başlangıç Bağımlılıklar Proje aşağıdaki tarayıcılarda test edilmiştir:\nGoogle Chrome Microsoft Edge Brave Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/SYChat.git Projeye gidin: 1 cd SYChat Gerekli yapılandırmaları yaptıktan sonra eklentiyi tarayıcınıza kurunuz. Chrome için kurulum aşamaları: chrome://extensions/ adresine gidiniz. Geliştirici Modu aktif ediniz. build/ klasörünü tarayıcıya sürükleyiniz. Yapılandırma Sohbetlerinizde kullanılan anahtarlar, tarayıcının depolamasında şifreli bir şekilde saklanır. Eklenti ayarlarından bu dosyayı dışarı aktarabilir veya içeri aktarabilirsiniz. Şifreleme anahtarı build/src/config.min.js dosyasındaki key bilgisidir. Güvenliğiniz için bu değeri değiştirmelisiniz. 1 export const key=\u0026#34;yeni-key-bilgisi\u0026#34;; Eklentinin ismini değiştirmek isterseniz: build/manifest.json dosyasında name\u0026lsquo;i değiştiriniz. build/src/config.min.js dosyasında app_name\u0026rsquo;i değiştiriniz. 1 export const app_name=\u0026#34;yeni-app-ismi\u0026#34;; Kullanım Manuel Anahtar Belirleme Bir anahtar belirleyin ya da rastgele oluşturun. Eklentinin pop-up menüsünden anahtarı giriniz. Anahtarı karşı tarafa güvenli bir şekilde iletiniz. (Ör: PGP ile) Karşı taraf da eklentinin pop-up menüsünden anahtarı girmelidir. Diffie-Hellman ile Ortak Anahtar Belirleme Karşı tarafa public anahtarınızı gönderiniz. Karşı tarafın kendi public anahtarını göndermesini bekleyiniz. İki tarafta kendi public anahtarını gönderdiğinde; Diffie-Hellman algoritması ile güvenli bir şekilde otomatik olarak ortak anahtar oluşturulur. Şifreli Mesaj Gönderme Anahtarı belirleyiniz. Mesajı yazınız ve CTRL+ENTER ile gönderiniz. Şifreli Dosya Gönderme Anahtarı belirleyiniz. Dosyayı sol taraftaki mavi dosya yükleme alanına sürükleyiniz. Şifreli Dosyayı Çözme Anahtarı belirleyiniz. Şifreli dosyayı indiriniz. Şifreli dosyayı sol taraftaki mavi dosya yükleme alanına sürükleyiniz. Çözülmüş dosya bilgisayarınıza indirilecektir. ","date":"2025-03-10T00:00:00+03:00","permalink":"https://seymenkonuk.github.io/post/sychat/","title":"SYChat: WhatsApp için Ekstra Şifreleme"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Sunduğu özellikler:\nKişiselleştirilmiş mail içeriği Kişiselleştirilmiş mail ekleri HTML / plain mail gönderebilme Sertifika Otomasyonu ile entegre olarak, sertifikaları ilgili kişilere hızlı bir şekilde mail olarak gönderebilme Örnek Kullanım Her öğrenciye özel sınav notunu içeren e-posta gönderebilirsiniz. Kursu tamamlayan her öğrenciye, isimlerine özel sertifika e-postalayabilirsiniz. Etkinliğe katılan herkese, kişiye özel teşekkür e-postası gönderebilirsiniz. Başlangıç Bağımlılıklar Proje aşağıdaki işletim sistemlerinde test edilmiştir:\nWindows 10 Windows 11 Debian Projenin düzgün çalışabilmesi için aşağıdaki yazılımların sisteminizde kurulu olması gerekir:\nPython Yorumlayıcısı 3.9 pip Docker (docker ortamında çalıştıracaksanız) Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/mail_sender.git Projeye gidin: 1 cd mail_sender Yapılandırma Mailde yazacak yazı için bir şablon oluşturmak için temp_messages/ dizini altına \u0026quot;\u0026lt;şablon_ismi\u0026gt;\u0026quot; adında bir dizin oluşturun. Bu dizinin altına message.conf ve message.txt adında iki dosya oluşturun. message.txt dosyasının içine mesaj olarak yazmasını istediğiniz metni yazınız. 1 2 3 4 5 6 7 8 9 Merhaba İsim Soyisim, \u0026#34;EXAMPLE EVENT\u0026#34; etkinliğimize katılımınız için teşekkür ederiz! Aşağıda, bu etkinliğe gösterdiğiniz ilgi ve katkı için size özel olarak hazırlanmış katılım sertifikanızı bulabilirsiniz. Gelecek etkinliklerimizde de sizi aramızda görmekten mutluluk duyarız! \u0026lt;hr\u0026gt; Başarılarınızın devamını dileriz. Saygılarımızla, EXAMPLE COMMUNITY message.txt dosyasında 2 farklı değişken ekleyebilirsiniz: Mesaj Sabitleri: her etkinlikte değişen bilgiler için kullanabilirsiniz. 1 2 3 4 5 6 7 8 9 Merhaba İsim Soyisim, \u0026#34;{{#EVENT_NAME#}}\u0026#34; etkinliğimize katılımınız için teşekkür ederiz! Aşağıda, bu etkinliğe gösterdiğiniz ilgi ve katkı için size özel olarak hazırlanmış katılım sertifikanızı bulabilirsiniz. Gelecek etkinliklerimizde de sizi aramızda görmekten mutluluk duyarız! \u0026lt;hr\u0026gt; Başarılarınızın devamını dileriz. Saygılarımızla, {{#EVENT_ORGANIZER#}} Kişi Değişkenleri: kişiye göre değişen veriler için kullanabilirsiniz. 1 2 3 4 5 6 7 8 9 Merhaba {{$NAME$}}, \u0026#34;{{#EVENT_NAME#}}\u0026#34; etkinliğimize katılımınız için teşekkür ederiz! Aşağıda, bu etkinliğe gösterdiğiniz ilgi ve katkı için size özel olarak hazırlanmış katılım sertifikanızı bulabilirsiniz. Gelecek etkinliklerimizde de sizi aramızda görmekten mutluluk duyarız! \u0026lt;hr\u0026gt; Başarılarınızın devamını dileriz. Saygılarımızla, {{#EVENT_ORGANIZER#}} Mesaj sabitlerini, mail türünü ve mail konusunu message.conf dosyasına tanımlayınız. 1 2 3 4 5 6 7 [General] type=html subject=Certificate [Constant] EVENT_ORGANIZER=Example Community EVENT_NAME=Example Event Kişi değişkenlerini settings/mailsend.tsv dosyasına tanımlayınız. 1 2 EMAIL\tNAME\tATTACHMENTS example\texample\texample ATTACHMENTS boş bırakılırsa ek yoktur, bir dosya ise ek o dosyadır, bir dizin ise ek o dizinin içindeki tüm dosyalardır. settings/settings.conf dosyasına kullanacağınız hesap bilgilerini, mesaj şablonunu, gönderilen mesajların hangi klasörde görüntüleyebileceğiniz ve herkese ortak olarak gönderilecek ekleri tanımlayınız. 1 2 3 4 5 6 7 8 [General] account_settings=account.conf template_message=example1 save_to_folder=true folder_name=Example shared_attachments=shared settings/account.conf dosyasına mail\u0026rsquo;i gönderecek hesabın bilgilerini giriniz. 1 2 3 4 5 6 7 8 9 10 11 [General] email=example@recepseymenkonuk.com password=Example Password display_name=Example Name smtp_host=smtp.recepseymenkonuk.com smtp_port=587 imap_host=imap.recepseymenkonuk.com imap_port=993 Mailde gönderilecek bütün ekleri attachments/ dizinine yerleştiriniz. Çalıştırma Uygulama Docker üzerinden kolayca çalıştırılabilir.\nDocker image almak için: 1 make build Projeyi çalıştırmak için: 1 make run Mailleri göndermeden test etmek için: 1 make test ","date":"2025-03-09T00:00:00+03:00","permalink":"https://seymenkonuk.github.io/post/email-automation/","title":"E-Posta Otomasyonu"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Sunduğu özellikler:\nÖzelleştirilebilir sertifika tasarımı Özelleştirilebilir sertifika metni QR kod ile sertifika doğrulama E-Posta Otomasyonu ile entegre olarak, sertifikaları ilgili kişilere hızlı bir şekilde mail olarak gönderebilme Tanıtım Başlangıç Bağımlılıklar Proje aşağıdaki işletim sistemlerinde test edilmiştir:\nDebian Projenin düzgün çalışabilmesi için aşağıdaki yazılımların sisteminizde kurulu olması gerekir:\nPython Yorumlayıcısı 3.9 pip inkscape Docker (docker ortamında çalıştıracaksanız) Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/generate_certificate.git Projeye gidin: 1 cd generate_certificate Yapılandırma Sertifika tasarımınızı yapınız ve .SVG uzantılı olarak dışa aktarınız. Şablonunuzu assets/templates/certificate dizinine taşıyınız. Sertifikanızda yazacak yazı için bir şablon oluşturmak için assets/templates/message/ dizini altına \u0026quot;\u0026lt;şablon_ismi\u0026gt;\u0026quot; adında bir dizin oluşturun. Bu dizinin altına message.conf ve message.txt adında iki dosya oluşturun. message.txt dosyasının içine mesaj olarak yazmasını istediğiniz metni yazınız. 1 2 3 4 Example Organizer tarafından 01.01.2025 tarihinde gerçekleştirilen Example Event etkinliğine katılımınızdan dolayı bu belgeyi almaya hak kazandınız. message.txt dosyasında 3 farklı değişken ekleyebilirsiniz: Mesaj Sabitleri: her etkinlikte değişen bilgiler için kullanabilirsiniz. 1 2 3 4 {{#EVENT_ORGANIZER#}} tarafından {{#EVENT_DATE#}} tarihinde gerçekleştirilen {{#EVENT_NAME#}} etkinliğine katılımınızdan dolayı bu belgeyi almaya hak kazandınız. Kişi Değişkenleri: kişiye göre değişen veriler için kullanabilirsiniz. 1 2 3 4 5 6 {{#EVENT_ORGANIZER#}} tarafından {{#EVENT_DATE#}} tarihinde gerçekleştirilen {{#EVENT_NAME#}} etkinliğine katılımınızdan dolayı bu belgeyi almaya hak kazandınız. Başarı Yüzdesi: {{$BASARI$}}/100 Özel Değişkenler: hazır olarak 3 değişken sunulmaktadır. {{CERTIFICATE_ID}}: rastgele üretilen benzersiz sertifika ID\u0026rsquo;si {{QR_CODE}}: üretilen QR kodun path bilgisi {{MESSAGE}}: message.txt dosyasında bu değişken kullanılmamalıdır! Mesaj sabitlerini message.conf dosyasına tanımlayınız. 1 2 3 4 [Constant] EVENT_ORGANIZER=Example Community EVENT_NAME=Example Event EVENT_DATE=01.01.2025 Kişi değişkenlerini inputs/new_participants.tsv dosyasına tanımlayınız. 1 2 3 NAME\tEMAIL\tBASARI Deneme1\tDeneme1\t90 Deneme2\tDeneme2\t70 Sertifikada da değişkenleri kullanabilirsiniz. Sertifikada mesajın yazmasını istediğiniz yer için {{MESSAGE}} değişkenini kullanınız. settings/settings.conf dosyasına kullanacağınız sertifika ve mesaj şablonunu tanımlayınız. 1 2 3 4 5 [General] certificate_template_svg=basic.svg [Message] certificate_message_template=example1 settings/settings.conf dosyasına {{MESSAGE}} ile ilgili ayarları ve doğrulama ile ilgili ayarları ekleyiniz. 1 2 3 4 5 6 7 8 9 10 11 12 13 [General] certificate_template_svg=basic.svg certificate_verification_base_url=https://recepseymenkonuk.com/sertifikalar certificate_verification_include_file_extension=true certificate_id_length=10 text_to_path=true [Message] certificate_message_template=example1 certificate_message_x_coordinate=144.28885 certificate_message_y_coordinate=121.16418 certificate_message_row_height=10 certificate_message_row_max_length=70 Çalıştırma Uygulama Docker üzerinden kolayca çalıştırılabilir.\nDocker image almak için: 1 make build Projeyi çalıştırmak için: 1 make run ","date":"2025-03-08T12:00:00+03:00","image":"https://seymenkonuk.github.io/post/certificate-automation/cover_hu_2d4d90963f845bfd.png","permalink":"https://seymenkonuk.github.io/post/certificate-automation/","title":"Sertifika Otomasyonu"},{"content":"Proje kaynak kodlarına GitHub üzerindeki bu repo aracılığıyla ulaşabilirsiniz.\nAçıklama Sunduğu özellikler:\nFlag Yönetimi: Bayrak (flag) parametrelerini işleme ve yönetme. Opsiyonel ve Zorunlu Seçenekler: Hem opsiyonel hem de zorunlu seçenekleri destekler. Varsayılan Değerler: Seçenekler için varsayılan değer atama imkanı sağlar. Değer Validasyonu: Seçeneklere girilen değerlerin doğruluğunu kontrol eder. Yardım Menüsü: Kullanıcıya komut satırı argümanları hakkında bilgi sunar ve nasıl kullanılacağını gösterir. Örnek program çıktısı 1:\n\u0026gt; ./test option --zorluk: is require. Örnek program çıktısı 2:\n\u0026gt; ./test --genislik metin -h deneme --zorluk IMKANSIZ Type Error: option --genislik expects an integer. You provided \u0026#39;metin\u0026#39;. Type Error: option --hiz expects an double. You provided \u0026#39;deneme\u0026#39;. Type Error: option --zorluk expects an [\u0026#39;KOLAY\u0026#39;, \u0026#39;ORTA\u0026#39;, \u0026#39;ZOR\u0026#39;]. You provided \u0026#39;IMKANSIZ\u0026#39;. Örnek program çıktısı 3:\n\u0026gt; ./test --help -?, --help\tyardim ekrani -m, --mod\tmodu degistirir -g, --genislik \u0026lt;value\u0026gt;\toyun alaninin genisligini belirler -y, --yukseklik \u0026lt;value\u0026gt;\toyun alaninin yuksekligini belirler -h, --hiz \u0026lt;value\u0026gt;\toyunun hizini belirler -t, --test \u0026lt;value\u0026gt;\ttest amaclidir -z, --zorluk \u0026lt;value\u0026gt;\t*oyunun zorlugunu belirler (KOLAY, ORTA, ZOR) Başlangıç Bağımlılıklar Proje aşağıdaki işletim sistemlerinde test edilmiştir:\nDebian Projenin düzgün çalışabilmesi için aşağıdaki yazılımların sisteminizde kurulu olması gerekir:\nC Derleyicisi (GCC, Clang vb.) Make (Makefile kullanarak derlemek için) Docker (Docker kullanarak çalıştırmak için) Kurulum Bu repository\u0026rsquo;yi kendi bilgisayarınıza klonlayın: 1 git clone https://github.com/seymenkonuk/arg_parser.git Projeye gidin: 1 cd arg_parser Yapılandırma Yapılandırılacak bir şey yok!\nDerleme Kütüphane, Makefile üzerinden kolayca derlenebilir ve linklenebilir.\nProjeyi derlemek için: 1 make Projeyi temizlemek için: 1 make clean Makefile, kütüphanenizi derleyecek ve bin/libarg_parser.a statik kütüphanesini oluşturacaktır.\nÇalıştırma Kütüphaneyi kullanan basit bir programı (test/test.c) Docker üzerinden çalıştırabilirsiniz:\nMake ve Docker\u0026rsquo;ı kurunuz. Aşağıdaki komutu çalıştırınız: 1 make docker Kütüphaneyi kullanan basit bir programı (test/test.c) Makefile üzerinden çalıştırabilirsiniz:\nMake\u0026rsquo;i kurunuz. Aşağıdaki komutu çalıştırınız: 1 make test Kullanım Kütüphaneyi kendi C projenizde kullanabilmek için aşağıdaki adımları izleyebilirsiniz:\nKütüphaneyi derleyerek libarg_parser.a dosyasını elde edin.\nlibarg_parser.a dosyasını /path/to dizinine yerleştirin.\nsrc dizini içindeki bütün .h dosyalarını /path/to/include/arg_parser dizinine yerleştirin.\nKütüphaneyi dahil edin:\n#include \u0026lt;arg_parser/arg_parser.h\u0026gt; satırını, kullanmak istediğiniz C dosyasının başına ekleyin.\nDerleme sırasında kütüphaneyi linkleyin: (Burada /path/to dizini herhangi bir dizin olabilir.)\n1 gcc -o my_program my_program.c -L/path/to -larg_parser -I/path/to/include ","date":"2025-03-08T00:00:00+03:00","permalink":"https://seymenkonuk.github.io/post/arg-parser/","title":"Arg Parser"}]